#This file contains filters, transforms, and enrichments for Courier IMAP/POP3 messages


filter {
    if "process_syslog" in [tags] {
        if [syslog_program] == "courier-pop3d" or [syslog_program] =~ /courier-imap(d|s)/ {
        # LOGIN, user=user@host.tld, ip=[::ffff:1.2.3.4], port=[63641]
        # LOGIN FAILED, user=user@host.tld, ip=[::ffff:1.2.3.4]
        # TIMEOUT, user=user@host.tld, ip=[::ffff:1.2.3.4], headers=0, body=0, rcvd=740, sent=4580, time=7558, starttls=1
        # Connection, ip=[::ffff:1.2.3.4]
        # Disconnected, ip=[::ffff:1.2.3.4]
        # Maximum connection limit reached for ::ffff:1.2.3.4
            grok {
                match => [ "message", "^%{DATA:courier_event},(?: user=%{NOTSPACE:courier_username},)? ip=\[::ffff:%{IP:courier_srcip}\](?:, port=\[%{POSINT:courier_srcport}\])?" ]
                match => [ "message", "^%{DATA:courier_event} for ::ffff:%{IP:courier_srcip}" ]
                add_tag => [ "got_courier_event", "parse_done" ]
                tag_on_failure => [ "_gpfail_courierevent" ]
            }
        }

        if [courier_srcip] {
            geoip {
                database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
                source => "[courier_srcip]"
                target => "[courier_srcgeo]"
            }
            geoip {
                database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
                source => "[courier_srcip]"
                target => "[courier_srcgeo]"
            }
        }
        if [courier_srcgeo][ip] {
            mutate {
                remove_field => [ "[courier_srcgeo][ip]" ]
            }
        }
    }

    if "got_courier_event" in [tags] {
        if [courier_srcip] {
            mutate {
                add_field => { "ips" => "%{courier_srcip}" }
            }
        }
    }
}
