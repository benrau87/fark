# SOF-ELK Configuration File
# (C)2016 Lewes Technology Consulting, LLC
#
# This file contains filters, transforms, and enrichments for Squid log entries

filter {
    # squid access log parsing
    if "process_syslog" in [tags] and [syslog_program] == "squid" and [message] =~ / HTTP\/\d\.\d/ {
        grok {
            match => [ "message", "%{IPORHOST:squid_client}%{SPACE}%{USER:squid_identuser}%{SPACE}%{USER:squid_authuser}%{SPACE}\[%{INT:squid_day}/%{MONTH:squid_month}/%{YEAR:squid_year}:%{TIME:squid_time}%{SPACE}%{ISO8601_TIMEZONE:squid_tz}\]%{SPACE}%{GREEDYDATA:message_remainder}" ]
            add_tag => [ "got_squid_access" ]
            tag_on_failure => [ "_gpfail", "fail_sl07" ]
        }
    }
    if "process_syslog" in [tags] and "got_squid_access" in [tags] and [message_remainder] and [message_remainder] != "" {
        mutate {
            replace => [ "message", "%{message_remainder}" ]
            remove_field => [ "squid_identuser", "squid_authuser", "squid_day", "squid_month", "squid_year", "squid_time", "squid_tz" ]
        }
    } else if "process_syslog" in [tags] and "got_squid_access" in [tags] {
        mutate {
            replace => [ "message", "<null message>" ]
        }
    }
    if "process_syslog" in [tags] and "got_squid_access" in [tags] {
        mutate {
            remove_field => [ "message_remainder" ]
        }
    }
    if "process_syslog" in [tags] and "got_squid_access" in [tags] {
        grok {
            match => [ "message", "\"%{WORD:squid_method}%{SPACE}%{NOTSPACE:squid_proto}://%{HOSTNAME:squid_host}/?(?:%{NOTSPACE:squid_request})?%{SPACE}HTTP/%{NUMBER:squid_httpversion}\"%{SPACE}%{NUMBER:squid_returncode:int}%{SPACE}%{NUMBER:squid_bytes:int}%{SPACE}%{NOTSPACE:squid_referer}%{SPACE}%{QS:squid_useragent}%{SPACE}%{WORD:squid_cachestatus}:%{WORD:squid_hierarchystatus}" ]
            add_tag => [ "got_full_squid_access" ]
            add_field => { "squid_fullurl" => "%{squid_proto}://%{squid_host}/%{squid_request}" }
            tag_on_failure => [ "_gpfail", "fail_sl08" ]
        }
    }
    if "process_syslog" in [tags] and "got_full_squid_access" in [tags] {
        mutate {
            remove_field => [ "squid_httpversion", "squid_cachestatus", "squid_hierarchystatus", "squid_proto" ]
            gsub => [
                "squid_referer", "\"", "",
                "squid_useragent", "\"", ""
            ]
            add_tag => [ "parse_done" ]

        }
        if [squid_client] and [squid_method] and [squid_fullurl] and [squid_returncode] {
            mutate {
                replace => [ "message", "Proxy Request: %{squid_client} %{squid_method} %{squid_fullurl} (ret %{squid_returncode})" ]
            }
        }
    }
    if [squid_client] {
        grok {
            match => [ "squid_client", "%{IP:squid_client_ip}" ]
            tag_on_failure => [ "_squid_no_ip" ]
        }
    }
    if "_squid_no_ip" in [tags] {
        mutate {
            remove_tag => [ "_squid_no_ip" ]
        }
    } else if [squid_clientip] {
        mutate {
            add_field => { "ips" => "%{squid_client_ip}" }
        }
    }
    if [squid_client_ip] {
        mutate {
            remove_field => [ "squid_client_ip" ]
        }
    }
}
