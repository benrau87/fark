
# This file contains filters, transforms, and enrichments for Sendmail MTA messages


filter {
    if "process_syslog" in [tags] {
        if [syslog_program] == "sendmail" {
            # t1CGWwfs001773: from=<usr1@domain1.tld>, size=9191, class=0, nrcpts=0, proto=ESMTP, daemon=MTA, relay=[87.116.65.57]
            # t1CGZZuH002993: to=<user@host.tld>, delay=00:00:01, xdelay=00:00:01, mailer=local, pri=96121, dsn=2.0.0, stat=Sent
            # t1CGZ1hJ002734: Milter: to=<user3@host3.tld>, reject=451 4.7.1 Greylisting in action, please come back later

            grok {
                patterns_dir => "/usr/local/sof-elk/grok-patterns"
                match => [ "message", "^%{SENDMAIL_QID:smtp_qid}: (?:%{HOSTNAME:smtp_host} )?\[%{IP:smtp_ip}\] (?:\(may be forged\) )?%{GREEDYDATA:message_remainder}$" ]
                match => [ "message", "^%{SENDMAIL_QID:smtp_qid}: %{SENDMAIL_QID}: %{GREEDYDATA:message_remainder}$" ]
                match => [ "message", "^%{SENDMAIL_QID:smtp_qid}: (?:%{NOTEQUAL:smtp_subsystem}: )?%{GREEDYDATA:message_remainder}$" ]
                add_tag => [ "got_smtp_qid" ]
                tag_on_failure => [ "_defaultparse" ]
            }
            if "got_smtp_qid" in [tags] and [message_remainder] and [message_remainder] != "" {
                mutate {
                    replace => [ "message", "%{message_remainder}" ]
                }
            }

            if "got_smtp_qid" in [tags] and [message_remainder] {
                mutate {
                    # XXX must not be combined with replacement which uses same field
                    remove_field => [ "message_remainder" ]
                }
            }

            if [smtp_ip] {
                geoip {
                    database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
                    source => "[smtp_ip]"
                    target => "[smtp_geo]"
                }
                geoip {
                    database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
                    source => "[smtp_ip]"
                    target => "[smtp_geo]"
                }
                mutate {
                    add_field => { "ips" => "%{smtp_ip}" }
                }
            }
            if [smtp_geo][ip] {
                mutate {
                    remove_field => [ "[smtp_geo][ip]" ]
                }
            }

            kv {
                prefix => "smtp_"
                trim => "<>"
                field_split => ","
                trimkey => " "
                add_tag => [ "parse_done" ]
            }

            if [smtp_relay] =~ /(may be forged)/ or [smtp_relay] =~ /^\[.*\]$/ {
                grok {
                    match => [ "smtp_relay", "\[%{IP:smtp_relay_ip}\]$" ]
                }
            } else if [smtp_relay] =~ /^.* \[.*\]$/ {
                grok {
                    match => [ "smtp_relay", "%{HOSTNAME:smtp_relayhost} \[%{IP:smtp_relay_ip}\]"]
                }
            }

            if [smtp_relay_ip] {
                geoip {
                    database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
                    source => "[smtp_relay_ip]"
                    target => "[smtp_relaygeo]"
                }
                geoip {
                    database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
                    source => "[smtp_relay_ip]"
                    target => "[smtp_relaygeo]"
                }
                mutate {
                    add_field => { "ips" => "%{smtp_relay_ip}" }
                }
            }
            if [smtp_relaygeo][ip] {
                mutate {
                    remove_field => [ "[smtp_relaygeo][ip]" ]
                }
            }

            if [smtp_ctladdr] {
                grok {
                    match => [ "smtp_ctladdr", "%{DATA:smtp_ctladdr2} \(%{POSINT:smtp_uid}\/%{POSINT:smtp_gid}\)" ]
                    add_tag => [ "got_smtpuidgid" ]
                    tag_on_failure => [ "_defaultparse" ]
                }
                if "got_smtp_uidgid" in [tags] {
                    mutate {
                        replace => [ "smtp_ctladdr", "%{smtp_ctladdr2}" ]
                    }
                    mutate {
                        remove_field => [ "smtp_ctladdr2" ]
                    }
                }
            }
        }
    }
}
