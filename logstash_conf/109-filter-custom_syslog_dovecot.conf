
# This file contains filters, transforms, and enrichments for Dovecot IMAP/POP3 messages


filter {
    if "process_syslog" in [tags] {
        if [syslog_program] =~ /dovecot/ and ([message] =~ /^imap-login: / or [message] =~ /^pop3-login: /) {
            #imap-login: Login: user=<user@host.tld>, method=PLAIN, rip=1.2.3.4, lip=5.6.7.8, TLS
            #pop3-login: Login: user=<user@host.tld>, method=PLAIN, rip=1.2.3.4, lip=5.6.7.8, TLS
            #imap-login: Aborted login: rip=127.0.0.1, lip=127.0.0.1, TLS
            grok {
                match => [ "message", "^(?:imap|pop3)-login: %{DATA:imap_event}:(?: user=<%{NOTSPACE:imap_username}>,)?(?: method=%{WORD:imap_loginmethod},)? rip=(?:::ffff:)?%{IP:imap_remoteip}, lip=(?:::ffff:)?%{IP:imap_localip}" ]
                add_tag => [ "parse_done" ]
                tag_on_failure => [ "_gpfail_imapevent"]
            }
            if [message] =~ /^imap-login: / {
                mutate {
                    add_tag => [ "got_imap_event" ]
                }
            } else if [message] =~ /^pop3-login: / {
                mutate {
                    add_tag => [ "got_pop3_event" ]
                }
            }

            if [imap_remoteip] {
                geoip {
                    database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
                    source => "[imap_remoteip]"
                    target => "[imap_remotegeo]"
                }
                geoip {
                    database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
                    source => "[imap_remoteip]"
                    target => "[imap_remotegeo]"
                }
            }
            if [imap_localip] {
                geoip {
                    database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
                    source => "[imap_localip]"
                    target => "[imap_localgeo]"
                }
                geoip {
                    database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
                    source => "[imap_localip]"
                    target => "[imap_localgeo]"
                }
            }
            if [imap_remotegeo][ip] {
                mutate {
                    remove_field => [ "[imap_remotegeo][ip]" ]
                }
            }
            if [imap_localgeo][ip] {
                mutate {
                    remove_field => [ "[imap_localgeo][ip]" ]
                }
            }
        }

        if [syslog_program] =~ /dovecot/ and ([message] =~ /^IMAP\(/ or [message] =~ /^POP3\(/) {
            #IMAP(user@host.tld): Disconnected: Logged out
            #POP3(user@host.tld): Disconnected: Logged out top=0/0, retr=0/0, del=0/599, size=32354456
            grok {
                patterns_dir => "/usr/local/sof-elk/grok-patterns"
                match => [ "message", "^(?:IMAP|POP3)\(%{NOTSPACE:imap_username}\): %{NOTCOLON:imap_event}(?:: %{GREEDYDATA:imap_event_detail})?" ]
                add_tag => [ "parse_done" ]
                tag_on_failure => [ "_gpfail_imapevent" ]
            }
            if [message] =~ /^IMAP\(/ {
                mutate {
                    add_tag => [ "got_imap_event" ]
                }
            } else if [message] =~ /^POP3\(/ {
                mutate {
                    add_tag => [ "got_pop3_event" ]
                }
            }

        }
    }

    if "got_imap_event" in [tags] or "got_pop3_event" in [tags] {
        if [imap_remoteip] {
            mutate {
                add_field => { "ips" => "%{imap_remoteip}" }
            }
        }
        if [imap_localip] {
            mutate {
                add_field => { "ips" => "%{imap_localip}" }
            }
        }
    }

    if ("got_imap_event" in [tags] or "got_pop3_event" in [tags]) and "_gpfail_imapevent" in [tags] {
        mutate {
            remove_tag => [ "_gpfail_imapevent" ]
        }
    }
}
